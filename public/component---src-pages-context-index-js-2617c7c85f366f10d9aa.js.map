{"version":3,"file":"component---src-pages-context-index-js-2617c7c85f366f10d9aa.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/context/ClassicContext.tsx","webpack://gatsby-starter-default/./src/context/ClassicComponents.tsx","webpack://gatsby-starter-default/./src/context/fastContext.ts","webpack://gatsby-starter-default/./src/context/createFastContextProvider.ts","webpack://gatsby-starter-default/./src/context/FastComponents.tsx","webpack://gatsby-starter-default/./src/pages/context/index.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\"\n\nexport type State = {\n  counters: { a: number; b: number; c: number }\n  total: number\n}\n\n\nconst ClassicContext = createContext<{\n  state: State\n  setState: React.Dispatch<React.SetStateAction<State>>\n} | null>(null)\n\nexport const ClassicProvider = ({ initialState, children }: { initialState: State, children: React.ReactNode }) => {\n  const [state, setState] = useState<State>(initialState)\n  return (\n    <ClassicContext.Provider value={{ state, setState }}>\n      {children}\n    </ClassicContext.Provider>\n  )\n}\n\nexport const useClassic = () => {\n  const ctx = useContext(ClassicContext)\n  if (!ctx) throw new Error(\"Outside ClassicProvider\")\n  return ctx\n} ","import React, { useRef, useEffect } from \"react\"\nimport { Button, Box, Typography } from \"@mui/material\"\nimport { useClassic } from \"./ClassicContext\"\n\nexport function ClassicCounterControls() {\n  const { state, setState } = useClassic()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const increment = (key: keyof typeof state.counters) => {\n    setState((prev) => ({\n      ...prev,\n      counters: { ...prev.counters, [key]: prev.counters[key] + 1 },\n    }))\n  }\n\n  return (\n    <Box p={2} border=\"1px solid grey\">\n      <Typography>Classic CounterControls (renders: {renderCount.current})</Typography>\n      {([\"a\", \"b\", \"c\"] as const).map((k) => (\n        <Button\n          key={k}\n          onClick={() => increment(k)}\n          variant=\"contained\"\n          sx={{ m: 1 }}\n        >\n          Increment {k}: {state.counters[k]}\n        </Button>\n      ))}\n    </Box>\n  )\n}\n\nexport function ClassicTotalDisplay() {\n  const { state, setState } = useClassic()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const calculateTotal = () => {\n    const sum = Object.values(state.counters).reduce((a, b) => a + b, 0)\n    setState((prev) => ({ ...prev, total: sum }))\n  }\n\n  return (\n    <Box p={2} border=\"1px solid grey\" mt={2}>\n      <Typography>Classic Total: {state.total} (renders: {renderCount.current})</Typography>\n      <Button onClick={calculateTotal} variant=\"outlined\" sx={{ mt: 1 }}>\n        Recalculate Total\n      </Button>\n    </Box>\n  )\n} ","import { createFastContext } from \"./createFastContextProvider\"\n\ntype FastState = {\n  counter: { a: number; b: number; c: number }\n  total: number\n}\n\nexport const {\n  Provider: FastProvider,\n  useSelector: useFastSelector,\n  useSet: useFastSet,\n} = createFastContext({\n  counters: { a: 0, b: 1, c: 2 },\n  total: 3,\n})\n","import React, {\n    createContext,\n    useContext,\n    useRef,\n    useState,\n    useSyncExternalStore,\n    ReactNode,\n  } from \"react\"\n  \n  type Listener = () => void\n  type Subscriber = (listener: Listener) => () => void\n  \n  type Store<T> = {\n    get: () => T\n    set: (value: Partial<T> | ((prev: T) => Partial<T>)) => void\n    subscribe: Subscriber\n  }\n\n  \n  export function createFastContext<T>(initialValue: T) {\n    const StoreContext = createContext<Store<T> | null>(null);\n  \n    const Provider = ({ children }: { children: ReactNode }) => {\n      const storeRef = useRef<T>(initialValue)\n      const listeners = useRef<Set<Listener>>(new Set())\n  \n      const get = () => storeRef.current\n  \n      const set = (value: Partial<T> | ((prev: T) => Partial<T>)) => {\n        const prev = storeRef.current\n        const nextPartial = typeof value === \"function\" ? value(prev) : value\n        const next = { ...prev, ...nextPartial }\n  \n        if (next !== prev) {\n          storeRef.current = next\n          listeners.current.forEach((l) => l())\n        }\n      }\n  \n      const subscribe: Subscriber = (listener) => {\n        listeners.current.add(listener)\n        return () => listeners.current.delete(listener)\n      }\n  \n      const store = { get, set, subscribe }\n  \n      return React.createElement(StoreContext.Provider, { value: store }, children)\n    }\n  \n    function useSelector<U>(selector: (state: T) => U): U {\n      const store = useContext(StoreContext)\n      if (!store) throw new Error(\"useSelector must be used within Provider\")\n  \n      return useSyncExternalStore(\n        store.subscribe,\n        () => selector(store.get()),\n        () => selector(store.get())\n      )\n    }\n  \n    function useSet() {\n      const store = useContext(StoreContext)\n      if (!store) throw new Error(\"useSet must be used within Provider\")\n      return store.set\n    }\n  \n    return {\n      Provider,\n      useSelector,\n      useSet,\n    }\n  }\n  ","import React, { useRef, useEffect } from \"react\"\nimport { Box, Button, Typography } from \"@mui/material\"\nimport { useFastSelector, useFastSet } from \"./fastContext\"\n\nexport function FastCounterControls() {\n  const counters = useFastSelector((s) => s.counters)\n  const set = useFastSet()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const increment = (key: keyof typeof counters) => {\n    set((prev) => ({\n      counters: { ...prev.counters, [key]: prev.counters[key] + 1 },\n    }))\n  }\n\n  return (\n    <Box p={2} border=\"1px solid green\">\n      <Typography>Fast CounterControls (renders: {renderCount.current})</Typography>\n      {([\"a\", \"b\", \"c\"] as const).map((k) => (\n        <Button\n          key={k}\n          onClick={() => increment(k)}\n          variant=\"contained\"\n          sx={{ m: 1 }}\n        >\n          Increment {k}: {counters[k]}\n        </Button>\n      ))}\n    </Box>\n  )\n}\n\nexport function FastTotalDisplay() {\n  const total = useFastSelector((s) => s.total)\n  const counters = useFastSelector((s) => s.counters)\n  const set = useFastSet()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const calculateTotal = () => {\n    const sum = Object.values(counters).reduce((a, b) => a + b, 0)\n    set({ total: sum })\n  }\n\n  return (\n    <Box p={2} border=\"1px solid green\" mt={2}>\n      <Typography>Fast Total: {total} (renders: {renderCount.current})</Typography>\n      <Button onClick={calculateTotal} variant=\"outlined\" sx={{ mt: 1 }}>\n        Recalculate Total\n      </Button>\n    </Box>\n  )\n} ","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { ClassicProvider } from \"../../context/ClassicContext\"\nimport { ClassicCounterControls, ClassicTotalDisplay } from \"../../context/ClassicComponents\"\nimport { FastProvider } from \"../../context/fastContext\"\nimport { FastCounterControls, FastTotalDisplay } from \"../../context/FastComponents\"\n\nconst ContextPage = () => (\n  <Layout>\n    <Seo title=\"Context Demo\" />\n    <div style={{ display: \"flex\", gap: 40, padding: 20, paddingTop: 100 }}>\n      <div>\n        <ClassicProvider initialState={{ counters: { a: 0, b: 1, c: 2 }, total: 3 }}>\n          <ClassicCounterControls />\n          <ClassicTotalDisplay />\n        </ClassicProvider>\n      </div>\n      <div>\n        <FastProvider initialState={{ counters: { a: 0, b: 1, c: 2 }, total: 3 }}>\n          <FastCounterControls />\n          <FastTotalDisplay />\n        </FastProvider>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default ContextPage\n"],"names":["ClassicContext","createContext","ClassicProvider","_ref","initialState","children","state","setState","useState","React","Provider","value","useClassic","ctx","useContext","Error","ClassicCounterControls","renderCount","useRef","useEffect","current","Box","p","border","Typography","map","k","Button","key","onClick","increment","prev","counters","variant","sx","m","ClassicTotalDisplay","mt","total","calculateTotal","sum","Object","values","reduce","a","b","FastProvider","useSelector","useFastSelector","useSet","useFastSet","initialValue","StoreContext","storeRef","listeners","Set","store","get","set","nextPartial","next","forEach","l","subscribe","listener","add","delete","selector","useSyncExternalStore","createFastContext","c","FastCounterControls","s","FastTotalDisplay","ContextPage","Layout","Seo","title","style","display","gap","padding","paddingTop"],"sourceRoot":""}