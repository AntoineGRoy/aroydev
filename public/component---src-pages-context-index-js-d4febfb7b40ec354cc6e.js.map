{"version":3,"file":"component---src-pages-context-index-js-d4febfb7b40ec354cc6e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/context/ClassicContext.tsx","webpack://gatsby-starter-default/./src/context/ClassicComponents.tsx","webpack://gatsby-starter-default/./src/context/fastContext.js","webpack://gatsby-starter-default/./src/context/createFastContextProvider.js","webpack://gatsby-starter-default/./src/context/FastComponents.tsx","webpack://gatsby-starter-default/./src/pages/context/index.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\"\n\nexport type State = {\n  counters: { a: number; b: number; c: number }\n  total: number\n}\n\n\nconst ClassicContext = createContext<{\n  state: State\n  setState: React.Dispatch<React.SetStateAction<State>>\n} | null>(null)\n\nexport const ClassicProvider = ({ initialState, children }: { initialState: State, children: React.ReactNode }) => {\n  const [state, setState] = useState<State>(initialState)\n  return (\n    <ClassicContext.Provider value={{ state, setState }}>\n      {children}\n    </ClassicContext.Provider>\n  )\n}\n\nexport const useClassic = () => {\n  const ctx = useContext(ClassicContext)\n  if (!ctx) throw new Error(\"Outside ClassicProvider\")\n  return ctx\n} ","import React, { useRef, useEffect } from \"react\"\nimport { Button, Box, Typography } from \"@mui/material\"\nimport { useClassic } from \"./ClassicContext\"\n\nexport function ClassicCounterControls() {\n  const { state, setState } = useClassic()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const increment = (key: keyof typeof state.counters) => {\n    setState((prev) => ({\n      ...prev,\n      counters: { ...prev.counters, [key]: prev.counters[key] + 1 },\n    }))\n  }\n\n  return (\n    <Box p={2} border=\"1px solid grey\">\n      <Typography>Classic CounterControls (renders: {renderCount.current})</Typography>\n      {([\"a\", \"b\", \"c\"] as const).map((k) => (\n        <Button\n          key={k}\n          onClick={() => increment(k)}\n          variant=\"contained\"\n          sx={{ m: 1 }}\n        >\n          Increment {k}: {state.counters[k]}\n        </Button>\n      ))}\n    </Box>\n  )\n}\n\nexport function ClassicTotalDisplay() {\n  const { state, setState } = useClassic()\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const calculateTotal = () => {\n    const sum = Object.values(state.counters).reduce((a, b) => a + b, 0)\n    setState((prev) => ({ ...prev, total: sum }))\n  }\n\n  return (\n    <Box p={2} border=\"1px solid grey\" mt={2}>\n      <Typography>Classic Total: {state.total} (renders: {renderCount.current})</Typography>\n      <Button onClick={calculateTotal} variant=\"outlined\" sx={{ mt: 1 }}>\n        Recalculate Total\n      </Button>\n    </Box>\n  )\n} ","import createFastContext from \"./createFastContextProvider\"\n\nconst initialState = {\n  counters: { a: 0, b: 1, c: 2 },\n  total: 3,\n}\n\nexport const {\n  Provider: FastProvider,\n  useStore: useFastStore,\n} = createFastContext(initialState)\n\n// Convenience hooks for easier usage\nexport const useFastSelector = (selector) => {\n  const [state] = useFastStore(selector)\n  return state\n}\n\nexport const useFastSet = () => {\n  const [, set] = useFastStore(() => null) // We only need the setter\n  return set\n}\n","import React, {\n  useRef,\n  createContext,\n  useContext,\n  useCallback,\n  useSyncExternalStore,\n} from \"react\";\n\nexport default function createFastContext(initialState) {\n  function useStoreData() {\n    const store = useRef(initialState);\n\n    const get = useCallback(() => store.current, []);\n\n    const subscribers = useRef(new Set());\n\n    const set = useCallback((value) => {\n      store.current = { ...store.current, ...value };\n      subscribers.current.forEach((callback) => callback());\n    }, []);\n\n    const subscribe = useCallback((callback) => {\n      subscribers.current.add(callback);\n      return () => subscribers.current.delete(callback);\n    }, []);\n\n    return {\n      get,\n      set,\n      subscribe,\n    };\n  }\n\n  const StoreContext = createContext(null);\n\n  function Provider({ children }) {\n    return (\n      <StoreContext.Provider value={useStoreData()}>\n        {children}\n      </StoreContext.Provider>\n    );\n  }\n\n  function useStore(selector) {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error(\"Store not found\");\n    }\n\n    const state = useSyncExternalStore(\n      store.subscribe,\n      () => selector(store.get()),\n      () => selector(initialState),\n    );\n\n    return [state, store.set];\n  }\n\n  return {\n    Provider,\n    useStore,\n  };\n}\n  ","import React, { useRef, useEffect } from \"react\"\nimport { Box, Button, Typography } from \"@mui/material\"\nimport { useFastStore } from \"./fastContext\"\n\nexport function FastCounterControls() {\n  const [counters, set] = useFastStore((s) => s.counters)\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const increment = (key) => {\n    set({\n      counters: { ...counters, [key]: counters[key] + 1 },\n    })\n  }\n\n  return (\n    <Box p={2} border=\"1px solid green\">\n      <Typography>Fast CounterControls (renders: {renderCount.current})</Typography>\n      {([\"a\", \"b\", \"c\"]).map((k) => (\n        <Button\n          key={k}\n          onClick={() => increment(k)}\n          variant=\"contained\"\n          sx={{ m: 1 }}\n        >\n          Increment {k}: {counters[k]}\n        </Button>\n      ))}\n    </Box>\n  )\n}\n\nexport function FastTotalDisplay() {\n  const [total, set] = useFastStore((s) => s.total)\n  const [counters] = useFastStore((s) => s.counters)\n  const renderCount = useRef(0)\n  \n  useEffect(() => {\n    renderCount.current += 1\n  })\n\n  const calculateTotal = () => {\n    const sum = Object.values(counters).reduce((a, b) => (a as number) + (b as number), 0)\n    set({ total: sum })\n  }\n\n  return (\n    <Box p={2} border=\"1px solid green\" mt={2}>\n      <Typography>Fast Total: {total} (renders: {renderCount.current})</Typography>\n      <Button onClick={calculateTotal} variant=\"outlined\" sx={{ mt: 1 }}>\n        Recalculate Total\n      </Button>\n    </Box>\n  )\n} ","import React from \"react\"\nimport Layout from \"../../components/layout\"\nimport Seo from \"../../components/seo\"\nimport { ClassicProvider } from \"../../context/ClassicContext\"\nimport { ClassicCounterControls, ClassicTotalDisplay } from \"../../context/ClassicComponents\"\nimport { FastProvider } from \"../../context/fastContext\"\nimport { FastCounterControls, FastTotalDisplay } from \"../../context/FastComponents\"\n\nconst ContextPage = () => (\n  <Layout>\n    <Seo title=\"Context Demo\" />\n    <div style={{ display: \"flex\", gap: 40, padding: 20, paddingTop: 100 }}>\n      <div>\n        <ClassicProvider initialState={{ counters: { a: 0, b: 1, c: 2 }, total: 3 }}>\n          <ClassicCounterControls />\n          <ClassicTotalDisplay />\n        </ClassicProvider>\n      </div>\n      <div>\n        <FastProvider>\n          <FastCounterControls />\n          <FastTotalDisplay />\n        </FastProvider>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default ContextPage\n"],"names":["ClassicContext","createContext","ClassicProvider","_ref","initialState","children","state","setState","useState","React","Provider","value","useClassic","ctx","useContext","Error","ClassicCounterControls","renderCount","useRef","useEffect","current","Box","p","border","Typography","map","k","Button","key","onClick","increment","prev","counters","variant","sx","m","ClassicTotalDisplay","mt","total","calculateTotal","sum","Object","values","reduce","a","b","FastProvider","useStore","useFastStore","useStoreData","store","get","useCallback","subscribers","Set","set","forEach","callback","subscribe","add","delete","StoreContext","selector","useSyncExternalStore","createFastContext","c","FastCounterControls","s","FastTotalDisplay","ContextPage","Layout","Seo","title","style","display","gap","padding","paddingTop"],"sourceRoot":""}