(self.webpackChunkgatsby_starter_default=self.webpackChunkgatsby_starter_default||[]).push([[293],{1184:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return f}});var a=n(6540),o=n(4794),i=n(3815),r=n(2151),s=n(7528);var l=n(9961),c=n.n(l),p=n(4477),d=n(6423),h=n(5124),m=n(7862),g=n(5342),y=n(2412),u=n(8516);var f=()=>{const e=n(4394).A,t=new Map;e.forEach(e=>{if(e.categories&&e.categories.length>0){const n=e.categories[0];t.has(n)||t.set(n,[]),t.get(n).push(e)}});const l=Array.from(t.entries()).map(e=>{let[t,n]=e;return{category:t,articles:n.sort((e,t)=>parseInt(t.date)-parseInt(e.date))}});return a.createElement(r.A,null,a.createElement(i.A,{pageTitle:"Home"}),a.createElement(s.A,{title:"Home"}),a.createElement(p.A,{sx:{background:"linear-gradient(135deg,rgb(2, 110, 173) 0%,rgb(9, 17, 77) 100%)",color:"white",py:8,mt:8,display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",minHeight:"60vh",textAlign:"center"}},a.createElement(d.A,{maxWidth:"md"},a.createElement(h.A,{variant:"h2",component:"h1",gutterBottom:!0,sx:{fontWeight:300,mb:3,color:"white"}},"Hi, I'm Antoine"),a.createElement(h.A,{variant:"h5",component:"p",sx:{fontWeight:300,mb:4,opacity:.9}},"Senior Software Engineer & Creative Technologist"),a.createElement(p.A,{sx:{display:"flex",justifyContent:"center"}},a.createElement(c(),{style:{height:"4rem",maxWidth:"350px"}})),a.createElement(p.A,{sx:{mt:4,display:"flex",justifyContent:"center"}},a.createElement(o.Link,{to:"/context/",style:{textDecoration:"none",color:"inherit"}},a.createElement(m.A,{label:"See code and live example",color:"primary",variant:"outlined",sx:{color:"white",borderColor:"white","&:hover":{backgroundColor:"rgba(255, 255, 255, 0.1)",borderColor:"white"}}}))))),a.createElement(d.A,{maxWidth:"lg",sx:{py:6}},l.map(e=>{let{category:t,articles:n}=e;return a.createElement(p.A,{key:t,sx:{mb:6}},a.createElement(p.A,{sx:{mb:4,display:"flex",alignItems:"center",gap:2}},a.createElement(h.A,{variant:"h4",component:"h2",sx:{fontWeight:500}},t)),a.createElement(g.A,{container:!0,spacing:3},n.map(e=>a.createElement(g.A,{size:{xs:12,md:6,lg:4},key:e.id},a.createElement(y.A,{component:o.Link,to:`/${e.slug}/`,sx:{padding:"0px 32px 32px 32px",height:"100%",display:"flex",flexDirection:"column",transition:"transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out",textDecoration:"none",color:"inherit",maxWidth:"300px","&:hover":{transform:"translateY(-4px)",boxShadow:4,textDecoration:"none",color:"inherit"}}},e.featuredImage&&a.createElement(y.A,{height:"200"}),a.createElement(u.A,{sx:{flexGrow:1,display:"flex",flexDirection:"column"}},a.createElement(h.A,{variant:"h6",component:"h3",gutterBottom:!0,sx:{fontWeight:600}},e.title),a.createElement(h.A,{variant:"body2",color:"text.secondary",sx:{mb:2,flexGrow:1}},e.excerpt),a.createElement(p.A,{sx:{mt:"auto",display:"flex",flexWrap:"wrap",gap:1}},e.categories.map((e,t)=>a.createElement(m.A,{key:t,label:e,size:"small",color:0===t?"primary":"secondary",variant:"outlined"})))))))))})))}},4394:function(e,t){"use strict";const n=[{id:"1",title:"From Philosophy to Frontend Engineering",slug:"antoine-roy-frontend-journey",date:"2025-07-24",excerpt:"How a background in logic and pedagogy evolved into a career building design systems, scalable frontends, and cross-platform user experiences.",tags:["career journey","frontend engineer","design systems","React","education tech","trainingpeaks","vue","growth teams","ab testing","checkout","stripe","firestore","accessibility","cross-functional collaboration"],categories:["About Me"],content:[{type:"heading",text:"I've always loved logic"},{type:"paragraph",text:"\n        My professional path didn’t start with code. It started with logic & Philosophy.  \n        After earning a **Bachelor’s in Philosophy** and a **Master’s in Pedagogy**, I spent more than a decade as an **educator and digital education advisor**, deploying tools that helped teachers impact classrooms across continents —from Europe to the Amazonian rainforest, the Caribbean to the U.S.\n      "},{type:"paragraph",text:"\n        Teaching taught me more than pedagogy. It trained me to communicate complexity, to stay curious, and to think systemically. It also taught me one important truth: **technology, when well-designed, unlocks potential**.\n      "},{type:"heading",text:"Learning the Language of the Web"},{type:"paragraph",text:"\n        Teaching how to research information, how to use social networks responsibly, helping teachers and students use more and more complex tools led me to learn more about User Experience in technology.\n        Ultimately it led me to code my first tools, learn about accessibility, and understand the importance of performance.\n        That's when I realized I wanted to build tools that help people. In my mind, at this time, I could then go back to teaching with a stronger and deeper understanding of the impact of technology.\n        "},{type:"paragraph",text:"\n        I began as a freelancer, rebuilding frontends for startups like **Wespire** and **Resolvve**, boosting performance and stability. From there, I joined larger product teams: first **Buffini & Company**, then **Nexient**, and ultimately **TrainingPeaks**.\n      "},{type:"paragraph",text:"\n        Since then, I had the oportunity to work for very different companies with very different levels of maturity. From a very small startup like Resolvve to a well established brands like Williams Sonoma. Engineering culture and how it shapes the code produced - and sometimes the lack of it - is always fascinating to me. Melvin E. Conway was definetely right: "},{type:"quote",text:'"Any organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization\'s communication structure."'},{type:"heading",text:"Engineering for Growth, Design, and Consistency"},{type:"paragraph",text:"\n        At **TrainingPeaks**, I’ve worked across **checkout**, **growth**, and **design system** teams.  \n        I helped lead a **Stripe-powered checkout overhaul**, built **A/B testing frameworks** using Eppo and Segment, and co-led a **rebrand across web and mobile** by creating a shared design token system between engineering and design.\n      "},{type:"list",items:["Created a reusable design system with MUI themes, CSS variables, and icon libraries","Reduced checkout latency by 20% and dev time by 25% via shared components","Enabled experimentation across platforms through a unified growth framework"]},{type:"paragraph",text:"\n        I don’t just code features. I build **tools that accelerate teams**, connect **Figma to production**, and reduce **redundant effort**.\n      "},{type:"heading",text:"Code is Culture"},{type:"paragraph",text:"\n        I believe **development is a cultural act**. A good codebase expresses values: clarity, consistency, scalability.\n        Whether through documentation at TrainingPeaks’ Web Guild, or mentoring junior devs, I’ve always seen frontend work as a way to **influence how teams think and collaborate**.\n      "},{type:"quote",text:"Communicating the complexities and opportunities offered by technical solutions is my favorite thing to do."},{type:"heading",text:"What Drives Me Today"},{type:"paragraph",text:"\n        My ambition is to produce optimized, accessible code using best practices.  \n        I’m committed, motivated, and eager to learn. I want to help teams **move forward**, **solve meaningful problems**, and **build systems that scale**.\n      "},{type:"list",items:["Frontend architecture with React, Vue, and Next.js","Design system tooling and cross-platform theming","Performance tuning, A/B experimentation, and Lighthouse optimization","Accessibility-first development and testing"]},{type:"heading",text:"A Life Beyond the Terminal"},{type:"paragraph",text:"\n        Outside of work, I’m a **surfer of 30 years**, a **musician**, and a **lover of French poetry**.\n        I’ve lived on **four continents**, and that global perspective continues to inform the way I build—**with empathy, with curiosity, and with a bias toward clarity**.\n      "},{type:"separator"},{type:"heading",text:"Looking Ahead"},{type:"paragraph",text:"\n        I’m excited to continue contributing to teams that value performance, usability, and developer experience.  \n        Whether building tooling, leading initiatives, or delivering user-facing features, I aim to bridge the gap between **design and development**, **speed and scalability**, and **vision and execution**.\n      "}]},{id:"0",title:"How to build a design system",slug:"how-to-build-a-design-system",date:"2025-07-16",excerpt:"Company wide design system when environments are using many different technologies.",tags:["design system","tokens","cross-platform","collaboration","workflow","adoption","scaling","guidelines","design tokens","Figma","Supernova","Tailwind","MUI","JSON","consistency","tech debt"],categories:["Projects","Design Systems"],content:[{type:"heading",text:"What problem are we trying to solve?"},{type:"paragraph",text:"\n        Imagine a **mid-size company** with **200+ employees**, **10+ different teams**, and **5+ different technologies**, including web and mobile applications. \n        Each environment has its own **legacy** and **practices** in terms of style implementation.\n        Each team can work in any environment depending on the project. There is a **dedicated designer** for each team. This organization allows each team to focus on a specific **mission** rather than a specific technology but it makes it difficult \n        for engineers to adapt to each different environment's **legacy code** and **best practices**.\n      "},{type:"paragraph",text:"The consequences, in terms of styling, are:"},{type:"list",items:["**Unmaintainable styles** with hardcoded values","**Redundant code** – engineers avoid reusing components or values for fear of breaking other parts of the application","**Inconsistent design** and components across platforms"]},{type:"paragraph",text:"In three words: **tech debt increases**."},{type:"paragraph",text:"The root cause is the lack of a shared, authoritative **source of truth** for **styling**."},{type:"list",items:["Each environment has solved styling in its own **siloed way**. There’s **no global strategy**. **No unified vision**."]},{type:"separator"},{type:"heading",text:"Stage 0: The Variables"},{type:"paragraph",text:"\n        CSS and associated frameworks have gone a long way. They offer a lot of flexibility and power. How many engineers have had a deep feeling of accomplishment when replacing hard-coded values with CSS variables?\n        It feels good, it looks better, and you can now change a value everywhere with one change. But very quickly, new variables are added, engineers are reluctant to change existing variables' values because it's beyond the scope of their task and they are unsure of the consequences. Variables' power will cause their downfall. They will multiply and become unmanageable.\n      "},{type:"paragraph",text:"\n        These variables only exist in code; their names are very often the arbitrary creation of one engineer. In most cases, you will see some variations appear: blue1 will follow blue, and primary-light will follow primary. Watch them grow into primary-lighter or blue1-darker.\n      "},{type:"paragraph",text:"\n        The problem is that these variables are not shared. They are not part of a design system. They are not part of a shared vocabulary. They are not part of a shared understanding.\n        They are not part of a shared culture. They are not part of a shared language.\n      "},{type:"paragraph",text:"\n        The problem is that these variables are not shared. They are not part of a design system. They are not part of a shared vocabulary. They are not part of a shared understanding.\n      "},{type:"heading",text:"Stage 1: The Guidelines"},{type:"paragraph",text:"\n        This is usually the **first attempt** at solving the chaos.\n        **Courageous engineers** comb through codebases and documentation in an effort to define **cross-environment styling guidelines**. \n        They consult with **engineering leads** and **code owners** to understand existing patterns and challenges. They come accross the many variables and try to establish naming conventions.\n      "},{type:"paragraph",text:"\n        They write **documentation**. But the reality is, **guidelines aren’t enough**. \n        They help **standardize** practices within a team or repository—but they do not prevent **divergence** across environments.\n      "},{type:"quote",text:"\n        In the absence of a Design System, guidelines are often too vague to be useful or too detailed to be followed. \n      "},{type:"paragraph",text:"\n        At this point, engineers begin to realize the scope of the problem. **It’s not just technical—it’s organizational**.\n        Solving this problem seems like a herculean task that cannot be owned by engineering alone.\n      "},{type:"separator"},{type:"heading",text:"Stage 2: A holistic approach"},{type:"paragraph",text:"\n        We need to understand the problem from a holistic perspective. We won't be able to systematize styling if we don't understand the styles life cycle: \n      "},{type:"list",items:["How it is created","How it travels from designers to engineers","How it is used in production"]},{type:"paragraph",text:"**Designers are producers**, they produce styled UI elements.\n        Understanding their **tools**, **feedback cycles**, and **creative expectations** is critical if we want to systematize styling implementation."},{type:"paragraph",text:"Designers will be consumers and co-owners of the system, therefore it cannot be built without them."},{type:"heading",text:"Stage 3: Building the Styling Dictionary"},{type:"paragraph",text:"\n        The first meaningful step is creating a **styling dictionary**: a shared, structured collection of **design values** expressed as **tokens**.\n        This is a **collaborative effort** between design and engineering. Together, we define:\n      "},{type:"list",items:["**Base tokens**: raw values like colors, spacing, font sizes (#000, 8px, 1.5rem)","**Semantic tokens**: named purpose-driven values like primary-text, surface-background, action-hover","**Component tokens**: scoped tokens like card-padding, button-radius, form-border"]},{type:"paragraph",text:"\n        The **naming system** is inspired by utility-first frameworks like **Tailwind**—predictable, human-readable, and scalable.\n      "},{type:"paragraph",text:"But here’s the balance you must strike:"},{type:"list",items:["**Designers need enough expressive vocabulary** to stay creative","The system must stay **opinionated and systematic**—if everything is allowed, it’s not a system"]},{type:"quote",text:"If everything is allowed, it’s not really a system anymore, is it?"},{type:"paragraph",text:"\n        It's not just about building tooling for developers -  it's about **formalizing how designers express intent**.\n      "},{type:"heading",text:"Stage 4: Aligning Workflows"},{type:"paragraph",text:"\n        A dictionary alone won’t solve anything if teams don’t use it.\n        The next step is **aligning workflows**:\n      "},{type:"list",items:["How do designers use these tokens in **Figma** or **Sketch**?","How are these values surfaced to **engineers**?","How are **updates proposed and approved**?","How do tokens move from **idea → prototype → production**?"]},{type:"paragraph",text:"\n        Expose the design system in ways that are **native to both disciplines**:\n        Designers see tokens in **Figma plugins** or tools like **Supernova**,\n        Engineers consume them through **theme files**, **constants**, or **utility classes**.\n      "},{type:"heading",text:"Stage 5: Implementation Across Platforms"},{type:"paragraph",text:"\n        You don’t need to build a full platform to get started. In fact, you **shouldn’t**.\n        Start with the **simplest, most portable format**: a structured **JSON file**.\n      "},{type:"paragraph",text:"\n        This **JSON object** becomes the **source of truth** for tokens. Any platform—web, native, server-rendered—can consume it.\n      "},{type:"list",items:["Every team has access to **consistent values**","The system is immediately **useful in any environment**","You can **evolve tooling** around it without breaking things"]},{type:"heading",text:"Stage 6: Scaling the Outputs"},{type:"paragraph",text:"\n        Once the **JSON-based dictionary** is working and trusted, you can expand:\n      "},{type:"list",items:["Generate a **Tailwind config** from the dictionary","Export **MUI themes** mapped to token categories","Generate **native token objects** for iOS or Android","Build a central **icon registry** as part of the system"]},{type:"paragraph",text:"\n        This isn’t about adding complexity—it’s about **scaling one coherent system** across multiple platforms.\n      "},{type:"heading",text:"Stage 7: Adoption Through Enablement"},{type:"paragraph",text:"\n        If you want this system to be adopted, there’s only one strategy that works:\n        **Make it easier than not using it.**\n      "},{type:"list",items:["**Run workshops**","**Pair with engineers**","**Demo** how quickly you can build consistent UIs using the dictionary","Let designers see how their naming gets used **1:1 in production**"]},{type:"paragraph",text:"\n        Once people realize it **reduces friction**, they’ll adopt it on their own.\n        The system succeeds because it **helps them do their job better**.\n      "},{type:"heading",text:"Stage 8: Evolving with Change"},{type:"paragraph",text:"\n        Designers iterate. They change their mind. A lot. And that’s a **feature, not a bug**.\n        The system must accommodate this reality:\n      "},{type:"list",items:["**Updating tokens** should be collaborative and traceable","The **source of truth** must allow flexibility with structure","Tools like **Supernova** or **Specify** can enable designers to edit token values without touching code"]},{type:"separator"},{type:"heading",text:"Stage 9: Final Thoughts & What Comes Next"},{type:"paragraph",text:"\n        You've moved beyond **fragmented styling** and **outdated documentation**.\n        You've created a **shared design vocabulary**, **aligned workflows** across disciplines, and introduced a system that **scales across technologies**.\n        But building the system is only part of the journey.\n      "},{type:"paragraph",text:"\n        Now comes the real test: **proving it works**.\n        A system only justifies its existence if it brings **tangible value**—**consistency**, **scalability**, and **increased productivity**.\n        The next step is to **track adoption**, **measure impact**, and **surface wins**.\n      "},{type:"paragraph",text:"\n        In the next chapter, we’ll explore how to **demonstrate the system’s effectiveness**.\n        What **KPIs** can you use? How do you **measure consistency**?\n        How can you **prove** that what you’ve built makes your organization **faster, more efficient, and more cohesive**?\n      "}]},{id:"3",title:"Technical Deepdive: Performant React Context",slug:"technical-deepdive-performant-react-context",date:"2025-08-02",excerpt:"A deep dive into the performance of React Context, and how to use it effectively.",tags:["React","Context"],categories:["Projects"],content:[{type:"heading",text:"What is React Context?"},{type:"paragraph",text:"\n        React Context is a way to pass data through the component tree without having to pass props down manually at every level.\n      "},{type:"list",items:["**Intuitive**: Context totally makes sense in the context of modern React, it's a hook just like useState or useEffect","**Easy to implement**: Very little boilerplate, just a few lines of code","**Scalable**: It's a powerful tool, you reach any level of complexity with it adding reducers and other hooks."]},{type:"heading",text:"But there is one major issue with Context: Performance"},{type:"paragraph",text:"\n        Context is a powerful tool, but it can also be a performance bottleneck.\n        When a **component re-renders**, all of its **children will re-render**, even if the data hasn't changed.\n        Worse, if you have nested Context providers, the performance will degrade exponentially because, after all, they are children too.\n      "},{type:"paragraph",text:"\n        We could argue that in a perfectly architectured application, this is not a problem. But perfection is rarely achieved and if it is it fades away eventually.\n        In a real world application, we will have to deal with this issue.\n      "},{type:"heading",text:"Achieving performant Context"},{type:"paragraph",text:"\n        There are a few ways to achieve performant Context.\n      "},{type:"list",items:["**Use a memoized context**: Use a memoized context to avoid re-rendering the context provider when the data hasn't changed.","**Implement selective subscriptions**: Only subscribe to the specific state slices you need","**Use useSyncExternalStore**: Leverage React's built-in external store hook for better control","**Separate read and write operations**: Split state access from state updates","**Implement manual subscription management**: Control exactly when components re-render"]},{type:"heading",text:"Building a Fast Context Implementation"},{type:"paragraph",text:"\n        Let's build a performant context implementation that addresses these issues. The key is to bypass React's built-in context re-rendering mechanism and implement our own subscription system.\n      "},{type:"paragraph",text:"\n        Here's how we can create a fast context that only re-renders components when their specific data changes:\n      "},{type:"quote",text:"The goal is to make components subscribe directly to state changes rather than relying on context propagation."},{type:"heading",text:"Core Architecture"},{type:"paragraph",text:"\n        Our fast context implementation uses several key techniques:\n      "},{type:"list",items:["**Reference-based state**: Use useRef instead of useState to prevent Provider re-renders","**Manual subscription system**: Implement custom listeners with Set for O(1) operations","**useSyncExternalStore**: Leverage React's external store hook for better control","**Selective subscriptions**: Components only subscribe to their specific data needs","**Immutable updates**: Ensure referential equality for unchanged state portions"]},{type:"heading",text:"Implementation Details"},{type:"paragraph",text:"\n        The implementation consists of three main parts:\n      "},{type:"list",items:["**Store**: A lightweight state container with get, set, and subscribe methods","**Provider**: A component that creates and provides the store without re-rendering","**Hooks**: useSelector for reading state and useSet for updating state"]},{type:"paragraph",text:"\n        The store uses useRef to maintain state, preventing the Provider from re-rendering when state changes. Instead, it manually notifies subscribers through a custom subscription system.\n      "},{type:"heading",text:"Performance Benefits"},{type:"paragraph",text:"\n        This approach provides several significant performance improvements:\n      "},{type:"list",items:["**Zero Provider re-renders**: The Provider component never re-renders, regardless of state changes","**Selective component updates**: Only components using changed data re-render","**Predictable performance**: Performance doesn't degrade with component tree depth","**Efficient memory usage**: Automatic cleanup prevents memory leaks","**Scalable architecture**: Performance remains consistent as the application grows"]},{type:"heading",text:"Real-World Comparison"},{type:"paragraph",text:"\n        In our demo, you can see the difference between classic React Context and our fast implementation. \n        [See code and live example](/context/) to compare the performance in real-time.\n      "},{type:"list",items:["**Classic Context**: All components re-render when any state changes, even if they don't use that data","**Fast Context**: Only components using changed data re-render, others remain untouched"]},{type:"paragraph",text:"\n        This becomes especially important in large applications where you might have hundreds of components in the tree.\n      "},{type:"heading",text:"When to Use Fast Context"},{type:"paragraph",text:"\n        Fast context is ideal for:\n      "},{type:"list",items:["**Large component trees**: When you have many components that need access to shared state","**Frequent state updates**: Applications with high-frequency state changes","**Performance-critical applications**: Where every re-render matters","**Complex state management**: When you need fine-grained control over re-renders"]},{type:"paragraph",text:"\n        For simple applications with infrequent updates, classic React Context might be sufficient. But as your application grows, the performance benefits become increasingly valuable.\n      "},{type:"heading",text:"Best Practices"},{type:"paragraph",text:"\n        When implementing fast context, follow these best practices:\n      "},{type:"list",items:["**Use specific selectors**: Only select the data you actually need","**Keep selectors pure**: Avoid creating new objects or arrays in selectors","**Implement proper cleanup**: Always return cleanup functions from subscriptions","**Test performance**: Measure re-render counts to verify optimizations","**Document patterns**: Help your team understand when and how to use the fast context"]},{type:"separator"},{type:"heading",text:"Conclusion"},{type:"paragraph",text:"\n        React Context is a powerful tool, but it comes with performance trade-offs. By implementing a fast context pattern, we can maintain the simplicity and developer experience of Context while achieving the performance characteristics of external state management libraries.\n      "},{type:"paragraph",text:"\n        The key insight is that we don't need to rely on React's built-in context re-rendering mechanism. By implementing our own subscription system and using useSyncExternalStore, we can create a context that only re-renders components when their specific data changes.\n      "},{type:"paragraph",text:"\n        This approach scales well and provides predictable performance characteristics, making it suitable for large, performance-critical applications. The implementation is relatively simple but provides significant performance benefits.\n      "},{type:"quote",text:"Performance optimization is not about premature optimization—it's about building the right architecture from the start."}]}];t.A=n},9961:function(e,t,n){var a=n(6540);function o(e){return a.createElement("svg",e,a.createElement("g",{id:"Page-1",stroke:"none",strokeWidth:"1",fill:"none",fillRule:"evenodd"},[a.createElement("g",{id:"Group",transform:"translate(894.000000, 0.000000)",fill:"#61DAFB",fillRule:"nonzero",key:0},[a.createElement("path",{d:"M321.5373,143 C321.5373,121.729977 294.900686,101.57254 254.062243,89.0723112 C263.486499,47.4485126 259.297941,14.3327231 240.842105,3.73043478 C236.588101,1.24347826 231.614188,0.0654462243 226.182151,0.0654462243 L226.182151,14.6599542 C229.192677,14.6599542 231.614188,15.2489703 233.643021,16.3615561 C242.543707,21.4663616 246.405034,40.9038902 243.394508,65.9043478 C242.6746,72.0562929 241.496568,78.5354691 240.056751,85.1455378 C227.229291,82.004119 213.223799,79.5826087 198.498398,78.0118993 C189.663158,65.9043478 180.500686,54.9093822 171.272769,45.2887872 C192.608238,25.4585812 212.634783,14.594508 226.247597,14.594508 L226.247597,0 C226.247597,0 226.247597,0 226.247597,0 C208.249886,0 184.689245,12.82746 160.866819,35.0791762 C137.044394,12.9583524 113.483753,0.261784897 95.4860412,0.261784897 L95.4860412,14.8562929 C109.03341,14.8562929 129.1254,25.6549199 150.46087,45.3542334 C141.298398,54.9748284 132.135927,65.9043478 123.431579,78.0118993 C108.640732,79.5826087 94.6352403,82.004119 81.8077803,85.210984 C80.3025172,78.6663616 79.1899314,72.3180778 78.4045767,66.2315789 C75.3286041,41.2311213 79.1244851,21.7935927 87.9597254,16.623341 C89.9231121,15.4453089 92.4755149,14.9217391 95.4860412,14.9217391 L95.4860412,0.327231121 C95.4860412,0.327231121 95.4860412,0.327231121 95.4860412,0.327231121 C89.9885584,0.327231121 85.0146453,1.50526316 80.6951945,3.99221968 C62.3048055,14.594508 58.1816934,47.6448513 67.6713959,89.1377574 C26.9638444,101.703432 0.45812357,121.795423 0.45812357,143 C0.45812357,164.270023 27.0947368,184.42746 67.9331808,196.927689 C58.5089245,238.551487 62.6974828,271.667277 81.1533181,282.269565 C85.4073227,284.756522 90.3812357,285.934554 95.8787185,285.934554 C113.87643,285.934554 137.437071,273.107094 161.259497,250.855378 C185.081922,272.976201 208.642563,285.672769 226.640275,285.672769 C232.137757,285.672769 237.11167,284.494737 241.431121,282.00778 C259.82151,271.405492 263.944622,238.355149 254.45492,196.862243 C295.031579,184.362014 321.5373,164.204577 321.5373,143 Z M236.326316,99.3473684 C233.904805,107.789931 230.894279,116.494279 227.491076,125.198627 C224.80778,119.962929 221.993593,114.727231 218.91762,109.491533 C215.907094,104.255835 212.700229,99.1510297 209.493364,94.1771167 C218.786728,95.5514874 227.75286,97.2530892 236.326316,99.3473684 Z M206.351945,169.047597 C201.24714,177.882838 196.011442,186.259954 190.579405,194.048055 C180.827918,194.898856 170.945538,195.356979 160.997712,195.356979 C151.115332,195.356979 141.232952,194.898856 131.546911,194.113501 C126.114874,186.3254 120.81373,178.01373 115.708924,169.243936 C110.735011,160.670481 106.219222,151.966133 102.09611,143.196339 C106.153776,134.426545 110.735011,125.656751 115.643478,117.083295 C120.748284,108.248055 125.983982,99.8709382 131.416018,92.0828375 C141.167506,91.2320366 151.049886,90.773913 160.997712,90.773913 C170.880092,90.773913 180.762471,91.2320366 190.448513,92.0173913 C195.880549,99.805492 201.181693,108.117162 206.286499,116.886957 C211.260412,125.460412 215.776201,134.16476 219.899314,142.934554 C215.776201,151.704348 211.260412,160.474142 206.351945,169.047597 Z M227.491076,160.539588 C231.025172,169.309382 234.035698,178.079176 236.522654,186.587185 C227.949199,188.681465 218.91762,190.448513 209.55881,191.822883 C212.765675,186.783524 215.97254,181.613272 218.983066,176.312128 C221.993593,171.07643 224.80778,165.775286 227.491076,160.539588 Z M161.128604,230.370709 C155.042105,224.087872 148.955606,217.085126 142.934554,209.427918 C148.824714,209.689703 154.845767,209.886041 160.932265,209.886041 C167.084211,209.886041 173.170709,209.755149 179.126316,209.427918 C173.236156,217.085126 167.149657,224.087872 161.128604,230.370709 Z M112.436613,191.822883 C103.143249,190.448513 94.1771167,188.746911 85.6036613,186.652632 C88.0251716,178.210069 91.0356979,169.505721 94.4389016,160.801373 C97.1221968,166.037071 99.9363844,171.272769 103.012357,176.508467 C106.08833,181.744165 109.229748,186.84897 112.436613,191.822883 Z M160.801373,55.6292906 C166.887872,61.9121281 172.974371,68.9148741 178.995423,76.5720824 C173.105263,76.3102975 167.084211,76.1139588 160.997712,76.1139588 C154.845767,76.1139588 148.759268,76.2448513 142.803661,76.5720824 C148.693822,68.9148741 154.78032,61.9121281 160.801373,55.6292906 Z M112.371167,94.1771167 C109.164302,99.216476 105.957437,104.386728 102.946911,109.687872 C99.9363844,114.92357 97.1221968,120.159268 94.4389016,125.394966 C90.9048055,116.625172 87.8942792,107.855378 85.4073227,99.3473684 C93.980778,97.3185355 103.012357,95.5514874 112.371167,94.1771167 Z M53.1423341,176.115789 C29.9743707,166.23341 14.9871854,153.275057 14.9871854,143 C14.9871854,132.724943 29.9743707,119.701144 53.1423341,109.884211 C58.7707094,107.4627 64.9226545,105.302975 71.2709382,103.274142 C75.001373,116.101602 79.9098398,129.452632 85.9963387,143.130892 C79.975286,156.743707 75.1322654,170.029291 71.4672769,182.791304 C64.9881007,180.762471 58.8361556,178.5373 53.1423341,176.115789 Z M88.3524027,269.638444 C79.4517162,264.533638 75.590389,245.09611 78.6009153,220.095652 C79.3208238,213.943707 80.4988558,207.464531 81.9386728,200.854462 C94.7661327,203.995881 108.771625,206.417391 123.497025,207.988101 C132.332265,220.095652 141.494737,231.090618 150.722654,240.711213 C129.387185,260.541419 109.360641,271.405492 95.7478261,271.405492 C92.802746,271.340046 90.3157895,270.75103 88.3524027,269.638444 Z M243.590847,219.768421 C246.666819,244.768879 242.870938,264.206407 234.035698,269.376659 C232.072311,270.554691 229.519908,271.078261 226.509382,271.078261 C212.962014,271.078261 192.870023,260.279634 171.534554,240.58032 C180.697025,230.959725 189.859497,220.030206 198.563844,207.922654 C213.354691,206.351945 227.360183,203.930435 240.187643,200.72357 C241.692906,207.333638 242.870938,213.681922 243.590847,219.768421 Z M268.787643,176.115789 C263.159268,178.5373 257.007323,180.697025 250.659039,182.725858 C246.928604,169.898398 242.020137,156.547368 235.933638,142.869108 C241.954691,129.256293 246.797712,115.970709 250.4627,103.208696 C256.941876,105.237529 263.093822,107.4627 268.853089,109.884211 C292.021053,119.76659 307.008238,132.724943 307.008238,143 C306.942792,153.275057 291.955606,166.298856 268.787643,176.115789 Z",id:"Shape",key:0}),a.createElement("circle",{id:"Oval",cx:"160.932265",cy:"143",r:"29.9089245",key:1})]),a.createElement("g",{id:"Group",transform:"translate(1287.000000, 0.000000)",strokeLinecap:"round",strokeLinejoin:"round",key:1},[a.createElement("g",{id:"A-link",transform:"translate(2.210884, 2.210884)",key:0},a.createElement("g",{id:"A"},a.createElement("g",{id:"Group"},[a.createElement("path",{d:"M252.673129,141.496599 L181.92483,141.496599 L181.92483,161.704082 L230.431633,161.704082 C223.356803,192.02415 201.115306,217.285714 171.812245,227.398299 L55.5816327,111.176531 C67.7105442,75.802381 102.072109,50.5363946 141.496599,50.5363946 C171.816667,50.5363946 199.112245,65.7030612 216.286395,88.9438776 L231.453061,75.8112245 C211.227891,48.5068027 178.891497,30.320068 141.496599,30.320068 C88.9394558,30.320068 44.4697279,67.714966 33.3534014,117.238776 L166.758163,250.643537 C215.264966,238.514626 252.673129,194.044898 252.673129,141.487755 L252.673129,141.496599 Z M30.320068,142.513605 C30.320068,170.812925 41.4363946,198.095238 62.6608844,219.319728 C83.8853741,240.544218 112.184694,251.660544 139.467007,251.660544 L30.320068,142.513605 Z",id:"Shape",fill:"#FFFFFF",key:0}),a.createElement("path",{d:"M141.496599,0 C63.6734694,0 0,63.6734694 0,141.496599 C0,219.319728 63.6734694,282.993197 141.496599,282.993197 C219.319728,282.993197 282.993197,219.319728 282.993197,141.496599 C282.993197,63.6734694 219.319728,0 141.496599,0 Z M62.6564626,220.336735 C41.4319728,199.112245 30.3156463,170.812925 30.3156463,143.530612 L140.479592,252.673129 C112.180272,251.656122 83.8809524,241.556803 62.6564626,220.332313 L62.6564626,220.336735 Z M165.745578,249.653061 L33.3534014,117.238776 C44.4697279,67.714966 88.9394558,30.320068 141.496599,30.320068 C178.891497,30.320068 211.227891,48.5112245 231.448639,75.802381 L216.281973,88.935034 C199.112245,65.6942177 171.816667,50.5408163 141.496599,50.5408163 C102.080952,50.5408163 68.727551,75.8068027 55.5816327,111.180952 L171.816667,227.411565 C201.132993,217.303401 223.361224,192.037415 230.436054,161.717347 L181.929252,161.717347 L181.929252,141.496599 L252.677551,141.496599 C252.677551,194.053741 215.282653,238.523469 165.758844,249.639796 L165.745578,249.653061 Z",id:"Shape",fill:"#663399",key:1})]))),a.createElement("g",{id:"A",key:1},a.createElement("g",{id:"Group"},[a.createElement("path",{d:"M252.673129,141.496599 L181.92483,141.496599 L181.92483,161.704082 L230.431633,161.704082 C223.356803,192.02415 201.115306,217.285714 171.812245,227.398299 L55.5816327,111.176531 C67.7105442,75.802381 102.072109,50.5363946 141.496599,50.5363946 C171.816667,50.5363946 199.112245,65.7030612 216.286395,88.9438776 L231.453061,75.8112245 C211.227891,48.5068027 178.891497,30.320068 141.496599,30.320068 C88.9394558,30.320068 44.4697279,67.714966 33.3534014,117.238776 L166.758163,250.643537 C215.264966,238.514626 252.673129,194.044898 252.673129,141.487755 L252.673129,141.496599 Z M30.320068,142.513605 C30.320068,170.812925 41.4363946,198.095238 62.6608844,219.319728 C83.8853741,240.544218 112.184694,251.660544 139.467007,251.660544 L30.320068,142.513605 Z",id:"Shape",fill:"#FFFFFF",key:0}),a.createElement("path",{d:"M141.496599,0 C63.6734694,0 0,63.6734694 0,141.496599 C0,219.319728 63.6734694,282.993197 141.496599,282.993197 C219.319728,282.993197 282.993197,219.319728 282.993197,141.496599 C282.993197,63.6734694 219.319728,0 141.496599,0 Z M62.6564626,220.336735 C41.4319728,199.112245 30.3156463,170.812925 30.3156463,143.530612 L140.479592,252.673129 C112.180272,251.656122 83.8809524,241.556803 62.6564626,220.332313 L62.6564626,220.336735 Z M165.745578,249.653061 L33.3534014,117.238776 C44.4697279,67.714966 88.9394558,30.320068 141.496599,30.320068 C178.891497,30.320068 211.227891,48.5112245 231.448639,75.802381 L216.281973,88.935034 C199.112245,65.6942177 171.816667,50.5408163 141.496599,50.5408163 C102.080952,50.5408163 68.727551,75.8068027 55.5816327,111.180952 L171.816667,227.411565 C201.132993,217.303401 223.361224,192.037415 230.436054,161.717347 L181.929252,161.717347 L181.929252,141.496599 L252.677551,141.496599 C252.677551,194.053741 215.282653,238.523469 165.758844,249.639796 L165.745578,249.653061 Z",id:"Shape",fill:"#663399",key:1})]))]),a.createElement("g",{id:"Group",transform:"translate(537.000000, 0.000000)",fillRule:"nonzero",key:2},[a.createElement("rect",{id:"Rectangle",fill:"#F7DF1E",x:"0",y:"0",width:"286",height:"286",key:0}),a.createElement("path",{d:"M192.119365,223.438635 C197.880222,232.844857 205.375238,239.758794 218.631111,239.758794 C229.766952,239.758794 236.880635,234.193143 236.880635,226.502921 C236.880635,217.287365 229.571746,214.023333 217.314603,208.661968 L210.595873,205.77927 C191.202349,197.517048 178.31873,187.166571 178.31873,165.285302 C178.31873,145.129111 193.676476,129.784984 217.677778,129.784984 C234.765143,129.784984 247.049524,135.731968 255.901905,151.303079 L234.973968,164.74054 C230.36619,156.478317 225.395238,153.223365 217.677778,153.223365 C209.805968,153.223365 204.816857,158.217016 204.816857,164.74054 C204.816857,172.803016 209.810508,176.067048 221.341302,181.060698 L228.060032,183.938857 C250.894635,193.730952 263.787333,203.713714 263.787333,226.157905 C263.787333,250.354413 244.779683,263.610286 219.253048,263.610286 C194.293873,263.610286 178.168921,251.716317 170.278952,236.127048 L192.119365,223.438635 Z M97.1809841,225.767492 C101.402889,233.257968 105.24346,239.590825 114.477175,239.590825 C123.306857,239.590825 128.877048,236.136127 128.877048,222.703206 L128.877048,131.319397 L155.751968,131.319397 L155.751968,223.066381 C155.751968,250.894635 139.436349,263.560349 115.621175,263.560349 C94.1030794,263.560349 81.6416508,252.424508 75.304254,239.012016 L97.1809841,225.767492 Z",id:"Shape",fill:"#000000",key:1})]),a.createElement("g",{id:"Group",transform:"translate(1644.000000, 0.000000)",fill:"#FFFFFF",key:3},a.createElement("path",{d:"M143.276843,20.5637489 C175.28788,20.5637489 204.434434,32.8306311 226.282746,52.9146116 C215.574089,52.6272793 204.887535,58.9927965 204.445485,73.569389 C203.544808,103.037534 239.68238,109.314642 220.210086,168.587995 L204.102896,217.616845 L160.234978,88.3946344 C159.555327,86.394359 160.345491,85.2560808 162.804393,85.2560808 L175.206653,85.2560808 C175.851217,85.2560808 176.37814,84.7057288 176.37814,84.0317133 L176.37814,76.6859506 C176.37814,76.0122115 175.849891,75.4340103 175.206653,75.4618594 C151.719994,76.4889069 128.371476,76.4958692 105.163861,75.4618594 C104.517363,75.4342313 103.992429,76.0144217 103.992429,76.6885477 L103.992429,84.0343104 C103.992429,84.7076075 104.519573,85.2586778 105.163916,85.2586778 L117.634141,85.2586778 C120.408059,85.2586778 121.184685,86.183004 121.838643,87.9710402 L139.863224,137.26512 L112.748993,219.13827 L68.1793214,87.8605277 C67.6267591,86.2138922 68.2953595,85.2579595 69.8812132,85.2579595 L84.0903517,85.2579595 C84.7346946,85.2579595 85.2616179,84.7076075 85.2616179,84.033592 L85.2616179,76.6878293 C85.2616179,76.0140902 84.7328159,75.4299766 84.0903517,75.4637382 C69.1822219,76.2556151 54.2171782,76.4148636 40.2771375,76.5579772 C62.1525248,42.8605203 100.108579,20.5609751 143.269217,20.5609751 L143.269057,20.5609751 L143.276843,20.5637489 Z M251.203304,84.8433168 C260.632778,102.216427 265.987107,122.121377 265.987107,143.27125 C265.987107,189.689243 240.196263,230.089833 202.171691,250.943532 L240.442153,142.547394 C246.371147,125.771603 251.874667,103.099974 251.200541,84.8433168 L251.20032,84.8433168 L251.203304,84.8433168 Z M184.359847,258.922531 C171.512774,263.492221 157.687666,265.984277 143.276843,265.984277 C130.860769,265.984277 118.881219,264.133194 107.586846,260.707308 L145.390393,152.371951 L184.359847,258.928057 L184.359847,258.928052 L184.359847,258.922531 Z M90.766851,254.20365 C49.2688726,234.52304 20.5638157,192.244843 20.5638157,143.276776 C20.5638157,125.124 24.5127019,107.891794 31.5901956,92.3880019 L90.7697796,254.20586 L90.7697796,254.20586 L90.766851,254.20365 Z M143.272975,9.04835142 C217.388151,9.04835142 277.495874,69.1560742 277.495874,143.27125 C277.495874,217.386426 217.388151,277.494149 143.272975,277.494149 C69.1577987,277.494149 9.05007589,217.386426 9.05007589,143.27125 C9.05007589,69.1560742 69.1577987,9.04835142 143.272975,9.04835142 L143.272975,9.04835142 Z M143.272975,0.564310459 C222.073879,0.564310459 285.98323,64.4736616 285.98323,143.274566 C285.98323,222.07547 222.073879,285.984821 143.272975,285.984821 C64.4720707,285.984821 0.562719563,222.07547 0.562719563,143.274566 C0.562719563,64.4736616 64.4720707,0.564310459 143.272975,0.564310459 Z",id:"Shape"})),a.createElement("g",{id:"Group",fillRule:"nonzero",key:4},[a.createElement("g",{id:"g3013",key:0},[a.createElement("polygon",{id:"polygon2989",fill:"#264DE4",points:"101.540055 286 18.7933281 263.028949 0.353589844 56.2057031 202.974535 56.2057031 184.515246 262.996551",key:0}),a.createElement("polygon",{id:"polygon2991",fill:"#2965F1",points:"168.71207 249.82882 184.486758 73.1165703 101.664063 73.1165703 101.664063 268.417145",key:1}),a.createElement("polygon",{id:"polygon2993",fill:"#EBEBEB",points:"42.6262891 149.82434 44.8997656 175.190082 101.664063 175.190082 101.664063 149.82434",key:2}),a.createElement("polygon",{id:"polygon2995",fill:"#EBEBEB",points:"38.0581094 98.4828711 40.3639844 123.849172 101.664063 123.849172 101.664063 98.4828711 101.576363 98.4828711",key:3}),a.createElement("polygon",{id:"polygon2997",fill:"#EBEBEB",points:"101.664063 215.702652 101.552902 215.732258 73.302582 208.104102 71.4966484 187.873512 57.769207 187.873512 46.0331523 187.873512 49.5869258 227.701805 101.547316 242.126371 101.664063 242.093973",key:4}),a.createElement("polygon",{id:"path2999",fill:"#FFFFFF",points:"48.0390625 0 78.7617188 0 78.7617188 12.8476562 60.8867188 12.8476562 60.8867188 25.6953125 78.7617188 25.6953125 78.7617188 38.5429688 48.0390625 38.5429688",key:5}),a.createElement("polygon",{id:"path3001",fill:"#FFFFFF",points:"84.90625 0 115.628906 0 115.628906 11.171875 97.7539063 11.171875 97.7539063 13.40625 115.628906 13.40625 115.628906 39.1015625 84.90625 39.1015625 84.90625 27.3710938 102.78125 27.3710938 102.78125 25.1367188 84.90625 25.1367188",key:6}),a.createElement("polygon",{id:"path3003",fill:"#FFFFFF",points:"121.773438 0 152.496094 0 152.496094 11.171875 134.621094 11.171875 134.621094 13.40625 152.496094 13.40625 152.496094 39.1015625 121.773438 39.1015625 121.773438 27.3710938 139.648438 27.3710938 139.648438 25.1367188 121.773438 25.1367188",key:7}),a.createElement("polygon",{id:"polygon3005",fill:"#FFFFFF",points:"160.539285 149.82434 165.118637 98.4828711 101.576363 98.4828711 101.576363 123.849172 137.31966 123.849172 135.011551 149.82434 101.576363 149.82434 101.576363 175.190082 132.811809 175.190082 129.867461 208.087902 101.576363 215.723879 101.576363 242.114082 153.57809 227.701805 153.959609 223.416273 159.920363 156.635832",key:8})]),a.createElement("g",{id:"g3054",transform:"translate(262.602326, 0.000000)",key:1},[a.createElement("polygon",{id:"polygon3028",fill:"#E44D26",points:"202.974535 56.2057031 184.515246 262.996551 101.540055 286 18.7933281 263.028949 0.353589844 56.2057031",key:0}),a.createElement("polygon",{id:"polygon3030",fill:"#F16529",points:"101.664063 268.417145 168.71207 249.82882 184.486758 73.1165703 101.664063 73.1165703",key:1}),a.createElement("polygon",{id:"polygon3032",fill:"#EBEBEB",points:"65.78 123.849172 101.664063 123.849172 101.664063 98.4828711 101.576363 98.4828711 38.0581094 98.4828711 38.6653008 105.288219 44.8997656 175.190082 101.664063 175.190082 101.664063 149.82434 68.0981641 149.82434",key:2}),a.createElement("polygon",{id:"polygon3034",fill:"#EBEBEB",points:"71.4966484 187.873512 57.769207 187.873512 46.0331523 187.873512 49.5869258 227.701805 101.547316 242.126371 101.664063 242.093973 101.664063 215.702652 101.552902 215.732258 73.302582 208.104102",key:3}),a.createElement("polygon",{id:"path3036",fill:"#FFFFFF",points:"19.2055703 0 32.0962383 0 32.0962383 12.7359375 43.8881523 12.7359375 43.8881523 0 56.7793789 0 56.7793789 38.5675469 43.8887109 38.5675469 43.8887109 25.6528594 32.0967969 25.6528594 32.0967969 38.5675469 19.2061289 38.5675469 19.2061289 0",key:4}),a.createElement("polygon",{id:"path3038",fill:"#FFFFFF",points:"73.7310234 12.7895625 62.3826328 12.7895625 62.3826328 0 97.9762266 0 97.9762266 12.7895625 86.6228086 12.7895625 86.6228086 38.5675469 73.731582 38.5675469 73.731582 12.7895625",key:5}),a.createElement("polygon",{id:"path3040",fill:"#FFFFFF",points:"103.625285 0 117.066727 0 125.335031 13.5514844 133.594957 0 147.041426 0 147.041426 38.5675469 134.203824 38.5675469 134.203824 19.4513516 125.335031 33.1642695 125.11327 33.1642695 116.238332 19.4513516 116.238332 38.5675469 103.625285 38.5675469",key:6}),a.createElement("polygon",{id:"path3042",fill:"#FFFFFF",points:"153.456875 0 166.351453 0 166.351453 25.8193203 184.479496 25.8193203 184.479496 38.5675469 153.456875 38.5675469",key:7}),a.createElement("polygon",{id:"polygon3044",fill:"#FFFFFF",points:"101.576363 175.190082 132.811809 175.190082 129.867461 208.087902 101.576363 215.723879 101.576363 242.114082 153.57809 227.701805 153.959609 223.416273 159.920363 156.635832 160.539285 149.82434 153.703773 149.82434 101.576363 149.82434",key:8}),a.createElement("polygon",{id:"polygon3046",fill:"#FFFFFF",points:"101.576363 123.787168 101.576363 123.849172 162.76584 123.849172 162.76584 123.849172 162.847395 123.849172 163.356273 118.147605 164.512004 105.288219 165.118637 98.4828711 101.576363 98.4828711 101.576363 114.237449",key:9})])])]))}o.defaultProps={width:"1930px",height:"286px",viewBox:"0 0 1930 286",version:"1.1"},e.exports=o,o.default=o}}]);
//# sourceMappingURL=component---src-pages-index-js-bdd9e56789eb8c9073f1.js.map